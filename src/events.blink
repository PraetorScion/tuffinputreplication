option ClientOutput = "./events/client"
option ServerOutput = "./events/server"

struct Transform {
    Position: vector<f16>,
    Rotation: struct {
        x: f16,
        y: f16,
        z: f16,
    }
}

event ClientReplicateCFrame {
    from: Client,
    type: Unreliable,
    call: SingleSync,
    data: struct {
        timeStamp: f32,
        CFrame: Transform?,
    }
}

event ServerReplicateCFrame {
    from: Server,
    type: Unreliable,
    call: SingleSync,
    data: struct {
        timeStamps: map {[u8]: f32},
        CFrames: map {[u8]: Transform},
    }
}

event TickRateChanged {
    from: Server,
    type: Reliable,
    call: SingleSync,
    data: struct {
        id: u8,
        tickRate: f16,
    }
}

event InitializePlayer {
    from: Server,
    type: Reliable,
    call: ManyAsync,
    data: struct {
        id: u8,
        player: string,
    }
}

event InitializeExistingPlayers {
    from: Server,
    type: Reliable,
    call: ManyAsync,
    data: struct {
        id: u8,
        player: string,
    }[]
}